name: new_idf
on:
  workflow_dispatch:
  schedule:
    - cron:  '0 0 * * 0'

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Install ESP-IDF prerequisite
      run: |
        sudo add-apt-repository -y "deb http://archive.ubuntu.com/ubuntu `lsb_release -sc` main universe restricted multiverse"
        sudo apt-get update -y -qq
        sudo apt-get install git wget flex bison gperf python3 python3-pip python3-setuptools cmake ninja-build ccache libffi-dev libssl-dev dfu-util
    - name: Set python3 default
      run: sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 10 && alias pip=pip3
    - name: Clone BlueRetroRoot
      run: git clone https://github.com/darthcloud/BlueRetroRoot.git .
    - name: Fetch submodules
      run: |
        git submodule update --init --remote
        cd esp-idf
        git submodule update --init --recursive
        cd ../BlueRetro
        git submodule update --init --recursive
    - name: Checkout main repo
      working-directory: ./BlueRetro
      run: |
        git fetch --force https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git "+refs/heads/*:refs/remotes/origin/*"
        git fetch --force https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git "+refs/pull/*:refs/remotes/origin/pr/*"
        git checkout ${{ github.sha }} || git checkout ${{ github.event.pull_request.head.sha }}
        git submodule update --init --recursive
    - name: Install ESP-IDF
      working-directory: ./esp-idf
      run: sh ./install.sh
      env:
        IDF_TOOLS_PATH : "/home/runner/work/BlueRetro/BlueRetro/BlueRetroRoot/"
    - name: Build with ESP-IDF
      working-directory: ./BlueRetro
      run: |
        . ../esp-idf/export.sh
        echo "br_version=$(git describe --always --tags --dirty)" >> $GITHUB_ENV
        for file in configs/hw2/*; do echo "$(git describe --always --tags --dirty) hw2 $(basename $file)" | cut -c -31 > version.txt; cat version.txt; cp configs/hw2/$(basename $file) sdkconfig; idf.py build; mv build/BlueRetro.bin build/BlueRetro_$(basename $file).bin; done
      env:
        IDF_TOOLS_PATH : "/home/runner/work/BlueRetro/BlueRetro/BlueRetroRoot/"
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.br_version }}_hw2_newidf
        path: |
          BlueRetro/build/partition_table/partition-table.bin
          BlueRetro/build/bootloader/bootloader.bin
          BlueRetro/build/BlueRetro*.bin
        if-no-files-found: error
